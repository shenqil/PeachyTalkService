// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"ginAdmin/internal/app/api"
	"ginAdmin/internal/app/model/gormx/repo"
	"ginAdmin/internal/app/router"
	"ginAdmin/internal/app/service"
)

// Injectors from wire.go:

// BuildInjector 生成注入器
func BuildInjector() (*Injector, func(), error) {
	auther, cleanup, err := InitAuth()
	if err != nil {
		return nil, nil, err
	}
	db, cleanup2, err := InitGormDB()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	demo := &repo.Demo{
		DB: db,
	}
	serviceDemo := &service.Demo{
		DemoModel: demo,
	}
	apiDemo := &api.Demo{
		DemoSrv: serviceDemo,
	}
	user := &repo.User{
		DB: db,
	}
	login := &service.Login{
		Auth:      auther,
		UserModel: user,
	}
	apiLogin := &api.Login{
		LoginSrv: login,
	}
	trans := &repo.Trans{
		DB: db,
	}
	serviceUser := &service.User{
		TransModel: trans,
		UserModel:  user,
	}
	apiUser := &api.User{
		UserSrv: serviceUser,
	}
	routerRouter := &router.Router{
		Auth:     auther,
		DemoAPI:  apiDemo,
		LoginAPI: apiLogin,
		UserAPI:  apiUser,
	}
	engine := InitGinEngine(routerRouter)
	injector := &Injector{
		Engine: engine,
		Auth:   auther,
	}
	return injector, func() {
		cleanup2()
		cleanup()
	}, nil
}
